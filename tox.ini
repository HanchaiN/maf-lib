[tox]
envlist = py3,help,version,flake8,type,cov
isolated_build = true

[testenv]
# update me
setenv = 
	package = maflib
	PYTHONHASHSEED = 0
passenv = PIP_EXTRA_INDEX_URL
skip_install =
	false
install_command = python -m pip install {opts} {packages}
deps = 
	-rdev-requirements.txt
	-rrequirements.txt
commands = pytest \
	--cov={env:package} \
	--cov-append \
	--cov-report=xml \
    --junit-xml=test-reports/results.xml
	{posargs}

[testenv:dev]
basepython = python3.8

[testenv:requirements]
deps = pip-tools
skip_install =
	true
commands =
  pip-compile -o dev-requirements.txt dev-requirements.in

[testenv:help]
skip_install =
	false
deps = 
	-rdev-requirements.txt
	-rrequirements.txt
commands =
	python -m {env:package} --help

[testenv:cov]
skip_install=True
deps = 
	-rdev-requirements.txt
	-rrequirements.txt
commands =
	coverage run -m pytest tests/
	coverage combine
	coverage report -m
	coverage xml

[testenv:flake8]
skip_install=True
deps = 
	-rdev-requirements.txt
	-rrequirements.txt
commands = 
	flake8 {env:package}/ tests/

[testenv:type]
skip_install = false
deps=
	-rrequirements.txt
	-rdev-requirements.txt
commands =
	python -m mypy {env:package}/

[testenv:build]
skip_install=True
install_command = python -m pip install {opts} {packages}
deps= 
  flit
commands = 
  python -m flit build

[testenv:publish]
skip_install=True
passenv =
	TWINE_USERNAME
	TWINE_PASSWORD
	TWINE_REPOSITORY_URL
install_command = python -m pip install {opts} {packages}
deps= 
  flit
  flit-scm
	twine
commands = 
  python -m flit build
  twine check dist/*
  twine upload dist/*

[testenv:version]
skip_install=True
install_command = python -m pip install {opts} {packages}
allowlist_externals = 
  git
commands = 
  git describe --tags

[flake8]
ignore = C901,D100,D104,E501,E302,E502,E126,E731,F841,W503,W605
extend_ignore = D tests/
exclude = 
	.tox,
	.git,
	.direnv,
	__pycache__,
	build,
	dist,
	*.pyc,
	*.egg-info,
	.eggs
docstring-convention=google
